{"version":3,"file":"BaseValidator.min.js","sources":["BaseValidator.js"],"sourcesContent":["/*+***********************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.0\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n * Contributor(s): YetiForce S.A.\n *************************************************************************************/\n'use strict';\n\njQuery.Class(\n\t'Vtiger_Base_Validator_Js',\n\t{\n\t\tmoduleName: false,\n\t\t/**\n\t\t *Function which invokes field validation\n\t\t *@param accepts field element as parameter\n\t\t * @return error if validation fails true on success\n\t\t */\n\t\tinvokeValidation: function (field, rules, k, options) {\n\t\t\t//If validation engine already maked the field as error\n\t\t\t// we dont want to proceed\n\t\t\tif (typeof options !== 'undefined') {\n\t\t\t\tif (options.isError === true) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet listOfValidators = Vtiger_Base_Validator_Js.getValidator(field);\n\t\t\tfor (let i in listOfValidators) {\n\t\t\t\tlet validatorList = listOfValidators[i],\n\t\t\t\t\tvalidatorName = validatorList.name,\n\t\t\t\t\tvalidatorInstance = new validatorName(),\n\t\t\t\t\tresult;\n\t\t\t\tvalidatorInstance.setElement(field);\n\t\t\t\tif (validatorList.hasOwnProperty('params')) {\n\t\t\t\t\tresult = validatorInstance.validate(validatorList.params);\n\t\t\t\t} else {\n\t\t\t\t\tresult = validatorInstance.validate();\n\t\t\t\t}\n\t\t\t\tif (!result) {\n\t\t\t\t\treturn validatorInstance.getError();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t *Function which gets the complete list of validators based on type and data-validator\n\t\t *@param accepts field element as parameter\n\t\t * @return list of validators for field\n\t\t */\n\t\tgetValidator: function (field) {\n\t\t\tlet listOfValidators = [],\n\t\t\t\tfieldData = field.data(),\n\t\t\t\tfieldInfo = fieldData.fieldinfo;\n\t\t\tif (typeof fieldInfo === 'string') {\n\t\t\t\tfieldInfo = JSON.parse(fieldInfo);\n\t\t\t}\n\t\t\tlet dataValidator = 'validator',\n\t\t\t\tmoduleEle = field.closest('form').find('[name=\"module\"]');\n\t\t\tif (Vtiger_Base_Validator_Js.moduleName === false && moduleEle.length > 0) {\n\t\t\t\tVtiger_Base_Validator_Js.moduleName = moduleEle.val();\n\t\t\t}\n\n\t\t\tlet fieldInstance = Vtiger_Field_Js.getInstance(fieldInfo),\n\t\t\t\tvalidatorsOfType = Vtiger_Base_Validator_Js.getValidatorsFromFieldType(fieldInstance),\n\t\t\t\tkey,\n\t\t\t\tvalue;\n\t\t\tfor (key in validatorsOfType) {\n\t\t\t\t//IE for loop fix\n\t\t\t\tif (!validatorsOfType.hasOwnProperty(key)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tvalue = validatorsOfType[key];\n\t\t\t\tif (value !== '') {\n\t\t\t\t\tlistOfValidators.push({ name: value });\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fieldData.hasOwnProperty(dataValidator)) {\n\t\t\t\tlet specialValidators = fieldData[dataValidator];\n\t\t\t\tfor (let s in specialValidators) {\n\t\t\t\t\t//IE for loop fix\n\t\t\t\t\tif (!specialValidators.hasOwnProperty(s)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlet specialValidator = specialValidators[s],\n\t\t\t\t\t\ttempSpecialValidator = jQuery.extend({}, specialValidator),\n\t\t\t\t\t\tvalidatorOfNames = Vtiger_Base_Validator_Js.getValidatorClassName(specialValidator.name);\n\t\t\t\t\tif (validatorOfNames !== '') {\n\t\t\t\t\t\ttempSpecialValidator.name = validatorOfNames;\n\t\t\t\t\t\tif (!jQuery.isEmptyObject(tempSpecialValidator)) {\n\t\t\t\t\t\t\tlistOfValidators.push(tempSpecialValidator);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn listOfValidators;\n\t\t},\n\t\t/**\n\t\t *Function which gets the list of validators based on data type of field\n\t\t *@param accepts fieldInstance as parameter\n\t\t * @return list of validators for particular field type\n\t\t */\n\t\tgetValidatorsFromFieldType: function (fieldInstance) {\n\t\t\tvar fieldType = fieldInstance.getType();\n\t\t\tvar validatorsOfType = [];\n\t\t\tfieldType = fieldType.charAt(0).toUpperCase() + fieldType.slice(1).toLowerCase();\n\t\t\tvalidatorsOfType.push(Vtiger_Base_Validator_Js.getValidatorClassName(fieldType));\n\t\t\treturn validatorsOfType;\n\t\t},\n\t\tgetValidatorClassName: function (validatorName) {\n\t\t\tvar validatorsOfType = '';\n\t\t\tvar className = Vtiger_Base_Validator_Js.getClassName(validatorName);\n\t\t\tvar fallBackClassName = Vtiger_Base_Validator_Js.getFallBackClassName(validatorName);\n\t\t\tif (typeof window[className] !== 'undefined') {\n\t\t\t\tvalidatorsOfType = window[className];\n\t\t\t} else if (typeof window[fallBackClassName] !== 'undefined') {\n\t\t\t\tvalidatorsOfType = window[fallBackClassName];\n\t\t\t}\n\t\t\treturn validatorsOfType;\n\t\t},\n\t\t/**\n\t\t *Function which gets validator className\n\t\t *@param accepts validatorName as parameter\n\t\t * @return module specific validator className\n\t\t */\n\t\tgetClassName: function (validatorName) {\n\t\t\tlet moduleName;\n\t\t\tif (Vtiger_Base_Validator_Js.moduleName != false) {\n\t\t\t\tmoduleName = Vtiger_Base_Validator_Js.moduleName;\n\t\t\t} else {\n\t\t\t\tmoduleName = app.getModuleName();\n\t\t\t}\n\t\t\treturn moduleName + '_' + validatorName + '_Validator_Js';\n\t\t},\n\t\t/**\n\t\t *Function which gets validator className\n\t\t *@param accepts validatorName as parameter\n\t\t * @return generic validator className\n\t\t */\n\t\tgetFallBackClassName: function (validatorName) {\n\t\t\treturn 'Vtiger_' + validatorName + '_Validator_Js';\n\t\t}\n\t},\n\t{\n\t\tfield: '',\n\t\terror: '',\n\t\t/**\n\t\t *Function which validates the field data\n\t\t * @return true\n\t\t */\n\t\tvalidate: function () {\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t *Function which gets error message\n\t\t * @return error message\n\t\t */\n\t\tgetError: function () {\n\t\t\tif (this.error != null) {\n\t\t\t\treturn this.error;\n\t\t\t}\n\t\t\treturn 'Validation Failed';\n\t\t},\n\t\t/**\n\t\t *Function which sets error message\n\t\t * @return Instance\n\t\t */\n\t\tsetError: function (errorInfo) {\n\t\t\tthis.error = errorInfo;\n\t\t\treturn this;\n\t\t},\n\t\t/**\n\t\t *Function which sets field attribute of class\n\t\t * @return Instance\n\t\t */\n\t\tsetElement: function (field) {\n\t\t\tthis.field = field;\n\t\t\treturn this;\n\t\t},\n\t\t/**\n\t\t *Function which gets field attribute of class\n\t\t * @return Instance\n\t\t */\n\t\tgetElement: function () {\n\t\t\treturn this.field;\n\t\t},\n\t\t/**\n\t\t *Function which gets trimed field value\n\t\t * @return fieldValue\n\t\t */\n\t\tgetFieldValue: function () {\n\t\t\tvar field = this.getElement();\n\t\t\treturn jQuery.trim(field.val());\n\t\t}\n\t}\n);\n"],"names":["jQuery","Class","moduleName","invokeValidation","field","rules","k","options","isError","listOfValidators","Vtiger_Base_Validator_Js","getValidator","i","validatorList","validatorName","name","validatorInstance","result","setElement","hasOwnProperty","validate","params","getError","fieldData","data","fieldInfo","fieldinfo","JSON","parse","moduleEle","closest","find","length","val","key","value","fieldInstance","Vtiger_Field_Js","getInstance","validatorsOfType","getValidatorsFromFieldType","push","specialValidators","validator","s","specialValidator","tempSpecialValidator","extend","validatorOfNames","getValidatorClassName","isEmptyObject","fieldType","getType","charAt","toUpperCase","slice","toLowerCase","className","getClassName","fallBackClassName","getFallBackClassName","window","app","getModuleName","error","setError","errorInfo","getElement","getFieldValue","trim"],"mappings":"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"}