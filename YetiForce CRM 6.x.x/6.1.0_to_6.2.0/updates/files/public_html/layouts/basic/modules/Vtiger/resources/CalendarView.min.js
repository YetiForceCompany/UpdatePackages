'use strict';

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var get = function get(object, property, receiver) {
  if (object === null) object = Function.prototype;
  var desc = Object.getOwnPropertyDescriptor(object, property);

  if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);

    if (parent === null) {
      return undefined;
    } else {
      return get(parent, property, receiver);
    }
  } else if ("value" in desc) {
    return desc.value;
  } else {
    var getter = desc.get;

    if (getter === undefined) {
      return undefined;
    }

    return getter.call(receiver);
  }
};

var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

/**
 * Class representing a standard calendar.
 * @extends Calendar_Js
 */window.Vtiger_Calendar_Js=function(_Calendar_Js){function Vtiger_Calendar_Js(container,readonly){classCallCheck(this,Vtiger_Calendar_Js);var _this=possibleConstructorReturn(this,(Vtiger_Calendar_Js.__proto__||Object.getPrototypeOf(Vtiger_Calendar_Js)).call(this,container,readonly,!1));return _this.browserHistory=!1,_this.calendarContainer=!1,_this.addCommonMethodsToYearView(),_this.calendar=_this.getCalendarView(),_this}return inherits(Vtiger_Calendar_Js,_Calendar_Js),createClass(Vtiger_Calendar_Js,[{key:'getCalendarSidebarData',value:function getCalendarSidebarData(){}},{key:'registerEditForm',value:function registerEditForm(){}},{key:'registerCacheSettings',value:function registerCacheSettings(){}},{key:'registerPinUser',value:function registerPinUser(){}},{key:'addCommonMethodsToYearView',value:function addCommonMethodsToYearView(){var self=this;FC.views.year=FC.views.year.extend({baseInstance:self,selectDays:self.selectDays,getCalendarCreateView:self.getCalendarCreateView,getSidebarView:self.getSidebarView,getCurrentCvId:self.getCurrentCvId,getCalendarView:self.getCalendarView,showRightPanelForm:self.showRightPanelForm,getSelectedUsersCalendar:self.getSelectedUsersCalendar,registerClearFilterButton:self.registerClearFilterButton,clearFilterButton:self.clearFilterButton,registerFilterTabChange:self.registerFilterTabChange,sidebarView:self.sidebarView,registerAfterSubmitForm:self.registerAfterSubmitForm,registerViewRenderEvents:self.registerViewRenderEvents,appendSubDateRow:self.appendSubDateRow,refreshDatesRowView:self.refreshDatesRowView,generateYearList:self.generateYearList,updateCountTaskCalendar:self.updateCountTaskCalendar,registerDatesChange:self.registerDatesChange,addHeaderButtons:self.addHeaderButtons,browserHistoryConfig:self.browserHistoryConfig,readonly:self.readonly,container:self.container,module:self.module,showChangeDateButtons:self.showChangeDateButtons,showTodayButtonCheckbox:self.showTodayButtonCheckbox,getDefaultParams:self.getDefaultParams});}/**
	 * Date bar with counts
	 * @param object calendarView
	 */},{key:'refreshDatesRowView',value:function refreshDatesRowView(calendarView){var self=this;switch(calendarView.type){case'year':self.generateYearList(calendarView.intervalStart,calendarView.intervalEnd);break;case'month':self.generateSubMonthList(calendarView.intervalStart,calendarView.intervalEnd);break;case'week':case'agendaWeek':self.generateSubWeekList(calendarView.start,calendarView.end);break;default:self.generateSubDaysList(calendarView.start,calendarView.end);}self.updateCountTaskCalendar(),self.registerDatesChange();}},{key:'generateSubDaysList',value:function generateSubDaysList(dateStart){for(var active,datesView=this.container.find('.js-dates-row'),prevDays=moment(dateStart).subtract(5,'days'),actualDay=moment(dateStart).format('DDD'),nextDays=moment(dateStart).add(7,'days'),daysToShow=nextDays.diff(prevDays,'days'),html='',day=0;day<daysToShow;++day){if(active='','workDays'===app.getMainParams('switchingDays')&&'all'!==app.moduleCacheGet('defaultSwitchingDays')&&-1!==$.inArray(prevDays.day(),app.getMainParams('hiddenDays',!0))){prevDays=moment(prevDays).add(1,'days'),daysToShow++;continue}prevDays.format('DDD')===actualDay&&(active=' active'),html+='<div class="js-sub-record sub-record nav-item col-1 px-0" data-type="days" data-date="'+prevDays.format('YYYY-MM-DD')+'" data-js="click | class: active"><div class="sub-record-content nav-link'+active+'"><div class="sub-date-name">'+app.vtranslate('JS_DAY_SHORT')+' '+prevDays.format('DD')+'<div class="js-count-events count badge c-badge--md ml-1" data-js="html">0</div></div></div></div>',prevDays=moment(prevDays).add(1,'days');}datesView.find('.js-sub-date-list').html(html);}},{key:'generateSubWeekList',value:function generateSubWeekList(dateStart){for(var active,datesView=this.container.find('.js-dates-row'),prevWeeks=moment(dateStart).subtract(5,'weeks'),actualWeek=moment(dateStart).format('WW'),nextWeeks=moment(dateStart).add(6,'weeks'),html='';prevWeeks<=nextWeeks;)active='',prevWeeks.format('WW')===actualWeek&&(active=' active'),html+='<div class="js-sub-record sub-record nav-item col-1 px-0" data-type="weeks" data-date="'+prevWeeks.format('YYYY-MM-DD')+'" data-js="click | class: active"><div class="sub-record-content nav-link'+active+'"><div class="sub-date-name">'+app.vtranslate('JS_WEEK_SHORT')+' '+prevWeeks.format('WW')+'<div class="js-count-events count badge c-badge--md ml-1" data-js="html">0</div></div></div></div>',prevWeeks=moment(prevWeeks).add(1,'weeks');datesView.find('.js-sub-date-list').html(html);}},{key:'generateYearList',value:function generateYearList(dateStart){for(var datesView=this.container.find('.js-dates-row'),prevYear=moment(dateStart).subtract(1,'year'),actualYear=moment(dateStart),nextYear=moment(dateStart).add(1,'year'),html='',active='';prevYear<=nextYear;)active=prevYear.format('YYYY')===actualYear.format('YYYY')?'active':'',html+='<div class="js-sub-record sub-record col-4 nav-item" data-date="'+prevYear.format('YYYY')+'" data-type="years" data-js="click | class: active">\n\t\t\t\t\t<div class="sub-record-content nav-link '+active+'">\n\t\t\t\t\t\t<div class="sub-date-name">\n\t\t\t\t\t\t\t'+prevYear.format('YYYY')+'\n\t\t\t\t\t\t\t<div class="js-count-events count badge c-badge--md ml-1" data-js="html">0</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>',prevYear=moment(prevYear).add(1,'year');datesView.find('.js-sub-date-list').html(html);}},{key:'registerDatesChange',value:function registerDatesChange(){var _this2=this;this.container.find('.js-dates-row .js-sub-record').on('click',function(e){var currentTarget=$(e.currentTarget);currentTarget.addClass('active'),_this2.getCalendarView().fullCalendar('gotoDate',moment(currentTarget.data('date'),'YYYY-MM-DD'));});}},{key:'selectDays',value:function selectDays(startDate,endDate){if(!this.container.find('.js-right-panel-event-link').length)return !1;this.container.find('.js-right-panel-event-link').tab('show');var start_hour=app.getMainParams('startHour'),end_hour=app.getMainParams('endHour'),view=this.getCalendarView().fullCalendar('getView');!1==endDate.hasTime()&&endDate.add(-1,'days'),startDate=startDate.format(),endDate=endDate.format(),''==start_hour&&(start_hour='00'),''==end_hour&&(end_hour='00'),this.getCalendarCreateView().done(function(data){if(!(0>=data.length)){if('agendaDay'!=view.name&&'agendaWeek'!=view.name&&(startDate=startDate+'T'+start_hour+':00',endDate=endDate+'T'+end_hour+':00',startDate==endDate)){var activityType=data.find('[name="activitytype"]').val(),activityDurations=JSON.parse(data.find('[name="defaultOtherEventDuration"]').val()),minutes=0;for(var i in activityDurations)if(activityDurations[i].activitytype===activityType){minutes=parseInt(activityDurations[i].duration);break}endDate=moment(endDate).add(minutes,'minutes').toISOString();}var dateFormat=CONFIG.dateFormat.toUpperCase(),timeFormat=CONFIG.hourFormat,dateField=data.find('[name="date_start"]');dateField.length&&(dateFormat=dateField.data('dateFormat').toUpperCase());var timeField=data.find('[name="time_start"]');timeField.length&&(timeFormat=timeField.data('format'));var defaultTimeFormat='';defaultTimeFormat=24==timeFormat?'HH:mm':'hh:mm A',data.find('[name="date_start"]').val(moment(startDate).format(dateFormat)),data.find('[name="due_date"]').val(moment(endDate).format(dateFormat)),!0===data.find('.js-autofill').prop('checked')?Calendar_Edit_Js.getInstance().getFreeTime(data):(data.find('[name="time_start"]').val(moment(startDate).format(defaultTimeFormat)),data.find('[name="time_end"]').val(moment(endDate).format(defaultTimeFormat)));}});}},{key:'updateCountTaskCalendar',value:function updateCountTaskCalendar(){var options=this.getDefaultParams();delete options.start,delete options.end;var datesView=this.container.find('.js-dates-row'),subDatesElements=datesView.find('.js-sub-record'),dateArray={},userDateFormat=CONFIG.dateFormat.toUpperCase();subDatesElements.each(function(key){var data=$(this).data('date'),type=$(this).data('type');'years'===type?dateArray[key]=[moment(data+'-01').format(userDateFormat)+' 00:00:00',moment(data+'-01').endOf('year').format(userDateFormat)+' 23:59:59']:'months'===type?dateArray[key]=[moment(data).format(userDateFormat)+' 00:00:00',moment(data).endOf('month').format(userDateFormat)+' 23:59:59']:'weeks'===type?dateArray[key]=[moment(data).format(userDateFormat)+' 00:00:00',moment(data).add(6,'day').format(userDateFormat)+' 23:59:59']:'days'===type&&(dateArray[key]=[moment(data).format(userDateFormat)+' 00:00:00',moment(data).format(userDateFormat)+' 23:59:59']);}),options.mode='getCountEventsGroup',options.dates=dateArray,AppConnector.request(options).done(function(events){subDatesElements.each(function(key){$(this).find('.js-count-events').removeClass('hide').html(events.result[key]);});});}},{key:'generateSubMonthList',value:function generateSubMonthList(dateStart){for(var datesView=this.container.find('.js-dates-row'),activeMonth=parseInt(moment(dateStart).locale('en').format('M'))-1,html='',active='',month=0;12>month;++month)active=month===activeMonth?'active':'',html+='<div class="js-sub-record sub-record nav-item col-1 px-0" data-type="months" data-date="'+moment(dateStart).month(month).format('YYYY-MM')+'" data-js="click | class: active">\n\t\t\t\t\t<div class="sub-record-content nav-link '+active+'">\n\t\t\t\t\t\t<div class="sub-date-name">'+App.Fields.Date.monthsTranslated[month]+'\n\t\t\t\t\t\t\t<div class="js-count-events count badge c-badge--md ml-1" data-js="html">0</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>';datesView.find('.js-sub-date-list').html(html);}},{key:'getSelectedUsersCalendar',value:function getSelectedUsersCalendar(){var sidebar=this.getSidebarView(),selectedUsers=sidebar.find('.js-input-user-owner-id:checked'),selectedUsersAjax=sidebar.find('.js-input-user-owner-id-ajax'),selectedRolesAjax=sidebar.find('.js-input-role-owner-id-ajax'),users=[];return 0<selectedUsers.length?selectedUsers.each(function(){users.push($(this).val());}):0<selectedUsersAjax.length&&(users=selectedUsersAjax.val().concat(selectedRolesAjax.val())),users}},{key:'clearFilterButton',value:function clearFilterButton(user,cvid){var currentUser=parseInt(app.getMainParams('userId')),time=app.getMainParams('showType'),statement=(0===user.length||1===user.length&&parseInt(user)===currentUser)&&void 0===cvid&&'current'===time;$('.js-calendar__clear-filters').toggleClass('d-none',statement);}},{key:'loadCalendarData',value:function loadCalendarData(){var view=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.getCalendarView().fullCalendar('getView'),self=this,options=this.getDefaultParams(view),calendarInstance=this.getCalendarView();calendarInstance.fullCalendar('removeEvents');var progressInstance=$.progressIndicator({blockInfo:{enabled:!0}});self.clearFilterButton(options.user,self.getCurrentCvId());var connectorMethod=window.AppConnector.request;connectorMethod(options).done(function(events){calendarInstance.fullCalendar('removeEvents'),calendarInstance.fullCalendar('addEventSource',events.result),progressInstance.progressIndicator({mode:'hide'});}),self.registerViewRenderEvents(view),window.calendarLoaded=!0;}/**
	 * Default params
	 * @returns {{module: *, action: string, mode: string, start: *, end: *, user: *, emptyFilters: boolean}}
	 */},{key:'getDefaultParams',value:function getDefaultParams(){var view=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.getCalendarView().fullCalendar('getView'),options=get(Vtiger_Calendar_Js.prototype.__proto__||Object.getPrototypeOf(Vtiger_Calendar_Js.prototype),'getDefaultParams',this).call(this),formatDate=CONFIG.dateFormat.toUpperCase(),user=this.getSelectedUsersCalendar();return 0===user.length&&(user=app.getMainParams('usersId')),void 0===user&&(user=[app.getMainParams('userId')]),'agendaDay'===view.type&&(view.end=view.end.add(1,'day')),options.user=user,options.start=view.start.format(formatDate),options.end=view.end.format(formatDate),options.time=app.getMainParams('showType'),options.history=!0,options}/**
	 * Function toggles next year/month and general arrows on view render
	 * @param view
	 * @param element
	 */},{key:'registerViewRenderEvents',value:function registerViewRenderEvents(view){this.calendarContainer=this.getCalendarView();var toolbar=this.calendarContainer.find('.fc-toolbar.fc-header-toolbar');this.showChangeDateButtons(view,toolbar),this.appendSubDateRow(toolbar),this.refreshDatesRowView(view),this.addHeaderButtons(),this.showTodayButtonCheckbox(toolbar);}/**
	 * Function appends and shows today button's checkbox
	 * @param {jQuery} toolbar
	 */},{key:'showTodayButtonCheckbox',value:function showTodayButtonCheckbox(toolbar){var todayButton=toolbar.find('.fc-today-button'),todyButtonIcon=todayButton.hasClass('fc-state-disabled')?'fa-calendar-check':'fa-calendar',popoverContent=app.vtranslate('JS_CURRENT')+' '+toolbar.find('.fc-state-active').text().toLowerCase();todayButton.removeClass('.fc-button'),todayButton.html('<div class="js-popover-tooltip--day-btn" data-toggle="popover"><span class="far fa-lg '+todyButtonIcon+'"></span></div>'),app.showPopoverElementView(todayButton.find('.js-popover-tooltip--day-btn'),{content:popoverContent,container:'.fc-today-button .js-popover-tooltip--day-btn'});}},{key:'addHeaderButtons',value:function addHeaderButtons(){if(!this.calendarContainer.find('.js-calendar__view-btn').length){var buttonsContainer=this.calendarContainer.prev('.js-calendar__header-buttons'),viewBtn=buttonsContainer.find('.js-calendar__view-btn').clone(),filters=buttonsContainer.find('.js-calendar__filter-container').clone();this.calendarContainer.find('.fc-left').prepend(viewBtn),this.calendarContainer.find('.fc-center').after(filters),this.registerClearFilterButton(),this.registerFilterTabChange();}}},{key:'registerFilterTabChange',value:function registerFilterTabChange(){var thisInstance=this;this.getCalendarView().find('.js-calendar__extended-filter-tab').on('shown.bs.tab',function(){thisInstance.getCalendarView().fullCalendar('getCalendar').view.options.loadView();});}},{key:'registerClearFilterButton',value:function registerClearFilterButton(){var sidebar=this.getSidebarView(),calendarView=this.getCalendarView(),clearBtn=calendarView.find('.js-calendar__clear-filters');app.showPopoverElementView(clearBtn),clearBtn.on('click',function(){$('.js-calendar__extended-filter-tab a').removeClass('active'),app.setMainParams('showType','current'),app.moduleCacheSet('defaultShowType','current'),sidebar.find('input:checkbox').prop('checked',!1),sidebar.find('option:selected').prop('selected',!1).trigger('change.select2'),sidebar.find('.js-sidebar-filter-container').each(function(_,e){var element=$(e),cacheName=element.data('cache');element.data('name')&&cacheName&&app.moduleCacheSet(cacheName,'');});var calendarSwitch=sidebar.find('.js-switch--showType [class*="js-switch--label"]'),actualUserCheckbox=sidebar.find('.js-input-user-owner-id[value='+app.getMainParams('userId')+']');calendarSwitch.last().removeClass('active'),calendarSwitch.first().addClass('active'),actualUserCheckbox.length?actualUserCheckbox.prop('checked',!0):app.setMainParams('usersId',void 0),calendarView.fullCalendar('getCalendar').view.options.loadView();});}/**
	 * Function shows change date buttons in calendar's header for specific view
	 * @param view
	 * @param toolbar
	 */},{key:'showChangeDateButtons',value:function showChangeDateButtons(view,toolbar){var viewType=view.type.replace(/basic|agenda/g,'').toLowerCase(),nextPrevButtons=toolbar.find('.fc-prev-button, .fc-next-button'),yearButtons=toolbar.find('.fc-prevYear-button, .fc-nextYear-button');window.calendarLoaded||(yearButtons.first().html('<span class="fas fa-xs fa-minus mr-1"></span>'+view.options.buttonText.year),yearButtons.last().html(view.options.buttonText.year+'<span class="fas fa-xs fa-plus ml-1"></span>')),'year'!==view.type&&(nextPrevButtons.first().html('<span class="fas fa-xs fa-minus mr-1"></span>'+view.options.buttonText[viewType]),nextPrevButtons.last().html(view.options.buttonText[viewType]+'<span class="fas fa-xs fa-plus ml-1"></span>')),'year'===view.type?(nextPrevButtons.hide(),yearButtons.show()):'month'===view.type?(nextPrevButtons.show(),yearButtons.show()):(nextPrevButtons.show(),yearButtons.hide());}/**
	 * Appends subdate row to calendar header and register its scroll
	 * @param toolbar
	 */},{key:'appendSubDateRow',value:function appendSubDateRow(toolbar){this.calendarContainer.find('.js-dates-row').length||(this.subDateRow=$('\n\t\t\t\t\t\t\t\t<div class="js-scroll js-dates-row u-overflow-auto-lg-down order-4 flex-grow-1 position-relative my-1 w-100" data-js="perfectScrollbar | container">\n\t\t\t\t\t\t\t\t\t<div class="d-flex flex-nowrap w-100">\n\t\t\t\t\t\t\t\t\t\t<div class="js-sub-date-list w-100 sub-date-list row no-gutters flex-nowrap nav nav-tabs" data-js="data-type"></div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t'),toolbar.append(this.subDateRow),$(window).width()>app.breakpoints.lg&&app.showNewScrollbar(this.subDateRow));}/**
	 * Get calendar create view.
	 * @returns {promise}
	 */},{key:'getCalendarCreateView',value:function getCalendarCreateView(){var self=this,aDeferred=jQuery.Deferred();if(!1!==this.calendarCreateView)return aDeferred.resolve(this.calendarCreateView.clone(!0,!0)),aDeferred.promise();var progressInstance=jQuery.progressIndicator();return this.loadCalendarCreateView().done(function(data){progressInstance.hide(),self.calendarCreateView=data,aDeferred.resolve(data.clone(!0,!0));}).fail(function(){progressInstance.hide();}),aDeferred.promise()}/**
	 * Set calendar module options.
	 * @returns {{allDaySlot: boolean, dayClick: object, selectable: boolean}}
	 */},{key:'setCalendarModuleOptions',value:function setCalendarModuleOptions(){var self=this;return {allDaySlot:!1,dayClick:!!this.eventCreate&&function(date){self.registerDayClickEvent(date.format()),self.getCalendarView().fullCalendar('unselect');},selectable:!1,eventClick:function eventClick(calEvent,jsEvent){jsEvent.preventDefault();var link=$(this).attr('href');link&&-1!==$.inArray('js-show-modal',calEvent.className)&&app.showModalWindow(null,link);}}}/**
	 * Register day click event.
	 * @param {string} date
	 */},{key:'registerDayClickEvent',value:function registerDayClickEvent(date){var self=this;self.getCalendarCreateView().done(function(data){if(!(0>=data.length)){var dateFormat=data.find('[name="date_start"]').data('dateFormat').toUpperCase(),timeFormat=data.find('[name="time_start"]').data('format'),defaultTimeFormat='hh:mm A';24==timeFormat&&(defaultTimeFormat='HH:mm');var startDateInstance=Date.parse(date),startDateString=moment(date).format(dateFormat),startTimeString=moment(date).format(defaultTimeFormat),endDateInstance=Date.parse(date),endDateString=moment(date).format(dateFormat),view=self.getCalendarView().fullCalendar('getView'),endTimeString=void 0;if('month'==view.name){var diffDays=parseInt((endDateInstance-startDateInstance)/86400000);if(1<diffDays){var defaultFirstHour=app.getMainParams('startHour'),explodedTime=defaultFirstHour.split(':');startTimeString=explodedTime[0];var defaultLastHour=app.getMainParams('endHour');explodedTime=defaultLastHour.split(':'),endTimeString=explodedTime[0];}else {var now=new Date;startTimeString=moment(now).format(defaultTimeFormat),endTimeString=moment(now).add(15,'minutes').format(defaultTimeFormat);}}else endTimeString=moment(endDateInstance).add(30,'minutes').format(defaultTimeFormat);data.find('[name="date_start"]').val(startDateString),data.find('[name="due_date"]').val(endDateString),data.find('[name="time_start"]').val(startTimeString),data.find('[name="time_end"]').val(endTimeString),App.Components.QuickCreate.showModal(data,{callbackFunction:function callbackFunction(data){self.addCalendarEvent(data.result,dateFormat);}});}});}/**
	 * Add calendar event.
	 */},{key:'addCalendarEvent',value:function addCalendarEvent(){this.loadCalendarData();}/**
	 * @deprecated
	 * @param {*} eventObject
	 */},{key:'isNewEventToDisplay',value:function isNewEventToDisplay(eventObject){var users=this.getSelectedUsersCalendar();if(0===users.length&&(users=[app.getMainParams('usersId')]),0>$.inArray(eventObject.assigned_user_id.value,users))return this.refreshFilterValues(eventObject,ownerSelects),!1;var calendarTypes=$('.js-calendar__filter__select[data-cache="calendar-types"]');return !(calendarTypes.length&&(this.eventTypeKeyName||this.setEventTypeKey(eventObject,calendarTypes.data('name')),this.eventTypeKeyName&&calendarTypes.val().length&&0>$.inArray(eventObject[this.eventTypeKeyName].value,calendarTypes.val())))}/**
	 * Render calendar
	 */},{key:'renderCalendar',value:function renderCalendar(){var self=this,basicOptions=this.setCalendarOptions(),options={header:{left:'year,month,'+app.getMainParams('weekView')+','+app.getMainParams('dayView'),center:'prevYear,prev,title,next,nextYear',right:'today'},views:{basic:{eventLimit:!1},year:{eventLimit:10,eventLimitText:app.vtranslate('JS_COUNT_RECORDS'),titleFormat:'YYYY',select:function select(){},loadView:function loadView(){self.getCalendarView().fullCalendar('getCalendar').view.render();}},month:{titleFormat:this.parseDateFormat('month'),loadView:function loadView(){self.loadCalendarData();}},week:{titleFormat:this.parseDateFormat('week'),loadView:function loadView(){self.loadCalendarData();}},day:{titleFormat:this.parseDateFormat('day'),loadView:function loadView(){self.loadCalendarData();}},basicDay:{type:'agendaDay',loadView:function loadView(){self.loadCalendarData();}}},select:function select(start,end){self.selectDays(start,end),self.getCalendarView().fullCalendar('unselect');},eventRender:function eventRender(event,element){self.eventRenderer(event,element);},viewRender:function viewRender(view){'year'!==view.type&&self.loadCalendarData(view);},addCalendarEvent:function addCalendarEvent(calendarDetails){self.getCalendarView().fullCalendar('renderEvent',self.getEventData(calendarDetails));}};options=Object.assign(basicOptions,options),this.calendar.fullCalendar(options);}},{key:'registerSwitchEvents',value:function registerSwitchEvents(){var _this3=this,calendarView=this.getCalendarView(),isWorkDays=void 0,switchShowTypeVal=void 0,switchContainer=$('.js-calendar__tab--filters'),switchShowType=switchContainer.find('.js-switch--showType'),showTypeState=switchShowType.find('.js-switch--label-on.active').length?'current':'history',switchSwitchingDays=switchContainer.find('.js-switch--switchingDays'),switchingDaysState=switchSwitchingDays.find('.js-switch--label-on.active').length?'workDays':'all',historyParams=app.getMainParams('historyParams',!0);''===historyParams?(isWorkDays='workDays'===app.getMainParams('switchingDays')&&'all'!==app.moduleCacheGet('defaultSwitchingDays'),switchShowTypeVal='current'===app.getMainParams('showType')&&'history'!==app.moduleCacheGet('defaultShowType'),!switchShowTypeVal&&switchShowType.find('.js-switch--label-off').button('toggle')):(void 0!==historyParams.time&&app.setMainParams('showType',historyParams.time),app.setMainParams('switchingDays',''===historyParams.hiddenDays?'all':'workDays')),switchShowType.on('change','input',function(e){var currentTarget=$(e.currentTarget);'undefined'==typeof currentTarget.data('on-text')?'undefined'!=typeof currentTarget.data('off-text')&&(app.setMainParams('showType','history'),app.moduleCacheSet('defaultShowType','history')):(app.setMainParams('showType','current'),app.moduleCacheSet('defaultShowType','current')),calendarView.fullCalendar('getCalendar').view.options.loadView();}),app.getMainParams('showType')!==showTypeState&&$('label.active',switchShowType).find('input').filter(':first').change(),switchSwitchingDays.length&&('undefined'!=typeof isWorkDays&&!isWorkDays&&switchSwitchingDays.find('.js-switch--label-off').button('toggle'),switchSwitchingDays.on('change','input',function(e){var currentTarget=$(e.currentTarget),hiddenDays=[];'undefined'==typeof currentTarget.data('on-text')?'undefined'!=typeof currentTarget.data('off-text')&&(app.setMainParams('switchingDays','all'),app.moduleCacheSet('defaultSwitchingDays','all')):(app.setMainParams('switchingDays','workDays'),app.moduleCacheSet('defaultSwitchingDays','workDays'),hiddenDays=app.getMainParams('hiddenDays',!0)),calendarView.fullCalendar('option','hiddenDays',hiddenDays),calendarView.fullCalendar('option','height',_this3.setCalendarHeight()),'year'===calendarView.fullCalendar('getView').type&&_this3.registerViewRenderEvents(calendarView.fullCalendar('getView'));}),app.getMainParams('switchingDays')!==switchingDaysState&&$('label.active',switchSwitchingDays).find('input').filter(':first').change());}/**
	 * Find element on list (user, group)
	 * @param {jQuery.Event} e
	 */},{key:'findElementOnList',value:function findElementOnList(e){var target=$(e.target),value=target.val().toLowerCase(),container=target.closest('.js-filter__container');container.find('.js-filter__item__value').filter(function(){var item=$(this).closest('.js-filter__item__container');-1<$(this).text().trim().toLowerCase().indexOf(value)?item.removeClass('d-none'):item.addClass('d-none');});}},{key:'registerEvents',value:function registerEvents(){get(Vtiger_Calendar_Js.prototype.__proto__||Object.getPrototypeOf(Vtiger_Calendar_Js.prototype),'registerEvents',this).call(this),this.registerCacheSettings(),this.registerSwitchEvents(),ElementQueries.listen();}}]),Vtiger_Calendar_Js}(Calendar_Js);
//# sourceMappingURL=CalendarView.min.js.map
