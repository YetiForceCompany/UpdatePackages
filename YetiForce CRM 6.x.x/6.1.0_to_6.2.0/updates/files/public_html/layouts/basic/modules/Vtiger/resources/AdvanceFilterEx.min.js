'use strict';

Vtiger_AdvanceFilter_Js('Vtiger_AdvanceFilterEx_Js',{},{validationSupportedFieldConditionMap:{email:['e','n'],date:['is'],datetime:['is']},//Hols field type for which there is validations always needed
allConditionValidationNeededFieldList:['double','integer'],// comparators which do not have any field Specific UI.
comparatorsWithNoValueBoxMap:['has changed','not has changed','is empty','is not empty','is added'],init:function init(container){'undefined'==typeof container&&(container=jQuery('#advanceFilterContainer')),container.is('#advanceFilterContainer')?this.setFilterContainer(container):this.setFilterContainer(jQuery('#advanceFilterContainer',container)),this.initialize();},getFieldSpecificType:function getFieldSpecificType(fieldSelected){var fieldInfo=fieldSelected.data('fieldinfo'),type=fieldInfo.type;return type},getModuleName:function getModuleName(){return 'AdvanceFilterEx'},/**
		 * Function to add new condition row
		 * @params : condtionGroupElement - group where condtion need to be added
		 * @return : current instance
		 */addNewCondition:function addNewCondition(conditionGroupElement){var basicElement=jQuery('.basic',conditionGroupElement),newRowElement=basicElement.find('.js-conditions-row').clone(!0,!0);jQuery('select',newRowElement).addClass('select2');var conditionList=jQuery('.conditionList',conditionGroupElement);return conditionList.append(newRowElement),App.Fields.Picklist.changeSelectElementView(newRowElement),newRowElement.find('[name="columnname"]').find('optgroup:first option:first').attr('selected','selected').trigger('change'),this},/**
		 * Function to load condition list for the selected field
		 * (overrrided to remove "has changed" condition for related record fields in workflows)
		 * @params : fieldSelect - select element which will represents field list
		 * @return : select element which will represent the condition element
		 */loadConditions:function loadConditions(fieldSelect){var row=fieldSelect.closest('div.js-conditions-row'),conditionSelectElement=row.find('select[name="comparator"]'),conditionSelected=conditionSelectElement.val(),fieldSelected=fieldSelect.find('option:selected'),fieldLabel=fieldSelected.val(),match=fieldLabel.match(/\((\w+)\) (\w+)/),fieldSpecificType=this.getFieldSpecificType(fieldSelected),conditionList=this.getConditionListFromType(fieldSpecificType);'undefined'==typeof conditionList&&(conditionList={},conditionList.none='None');var options='';for(var key in conditionList)//IE Browser consider the prototype properties also, it should consider has own properties only.
if(conditionList.hasOwnProperty(key)){var conditionValue=conditionList[key],conditionLabel=this.getConditionLabel(conditionValue);null==match?(options+='<option value="'+conditionValue+'"',conditionValue==conditionSelected&&(options+=' selected="selected" '),options+='>'+conditionLabel+'</option>'):'has changed'!=conditionValue&&(options+='<option value="'+conditionValue+'"',conditionValue==conditionSelected&&(options+=' selected="selected" '),options+='>'+conditionLabel+'</option>');}return conditionSelectElement.empty().html(options).trigger('change'),conditionSelectElement},/**
		 * Function to retrieve the values of the filter
		 * @return : object
		 */getValues:function getValues(){var thisInstance=this,filterContainer=this.getFilterContainer(),fieldList=['columnname','comparator','value','valuetype','column_condition'],values={},columnIndex=0,conditionGroups=$('.conditionGroup',filterContainer);return conditionGroups.each(function(index,domElement){var groupElement=$(domElement),conditions=$('.conditionList .js-conditions-row',groupElement),iterationValues={};return !!(0>=conditions.length)||void(conditions.each(function(i,conditionDomElement){var rowElement=$(conditionDomElement),fieldSelectElement=$('[name="columnname"]',rowElement),valueSelectElement=$('[data-value="value"]',rowElement);if(thisInstance.isEmptyFieldSelected(fieldSelectElement))return !0;var key,field,fieldType=fieldSelectElement.find('option:selected').data('fieldinfo').type,rowValues={};if(-1<$.inArray(fieldType,['picklist','multipicklist','multiReferenceValue'])){for(key in fieldList)if(field=fieldList[key],'value'===field&&valueSelectElement.is('input')){var pickListValues=valueSelectElement.data('picklistvalues'),valuesArr=valueSelectElement.val().split(','),newValuesArr=[];for(i=0;i<valuesArr.length;i++)'undefined'==typeof pickListValues[valuesArr[i]]?newValuesArr.push(valuesArr[i]):newValuesArr.push(pickListValues[valuesArr[i]]);rowValues[field]=newValuesArr.join(',');}else if('value'===field&&valueSelectElement.is('select')&&'picklist'===fieldType)rowValues[field]=valueSelectElement.val();else if('value'===field&&valueSelectElement.is('select')&&-1<$.inArray(fieldType,['multipicklist','multiReferenceValue'])){var value=valueSelectElement.val();rowValues[field]=null==value?value:value.join(',');}else rowValues[field]=$('[name="'+field+'"]',rowElement).val();}else for(key in fieldList)field=fieldList[key],rowValues[field]='value'===field?valueSelectElement.val():$('[name="'+field+'"]',rowElement).val();('false'===$('[name="valuetype"]',rowElement).val()||0===$('[name="valuetype"]',rowElement).length)&&(rowValues.valuetype='rawtext'),rowValues.groupid=0===index?0:1,rowElement.is(':last-child')&&(rowValues.column_condition=''),iterationValues[columnIndex]=rowValues,columnIndex++;}),!$.isEmptyObject(iterationValues)&&(values[index+1]={},values[index+1].columns=iterationValues),0<groupElement.find('div.groupCondition').length&&!$.isEmptyObject(values[index+1])&&(values[index+1].condition=conditionGroups.find('div.groupCondition [name="condition"]').val()))}),values},/**
		 * Functiont to get the field specific ui for the selected field
		 * @prarms : fieldSelectElement - select element which will represents field list
		 * @return : jquery object which represents the ui for the field
		 */getFieldSpecificUi:function getFieldSpecificUi(fieldSelectElement){var fieldSelected=fieldSelectElement.find('option:selected'),fieldInfo=fieldSelected.data('fieldinfo');return -1==jQuery.inArray(fieldInfo.comparatorElementVal,this.comparatorsWithNoValueBoxMap)?this._super(fieldSelectElement):jQuery('')},getPopUp:function getPopUp(container){var thisInstance=this;'undefined'==typeof container&&(container=thisInstance.getFilterContainer()),container.on('click','.getPopupUi',function(e){var fieldValueElement=jQuery(e.currentTarget),fieldValue=fieldValueElement.val(),fieldUiHolder=fieldValueElement.closest('.fieldUiHolder'),valueType=fieldUiHolder.find('[name="valuetype"]').val(),conditionsContainer=fieldValueElement.closest('.js-conditions-container'),clonedPopupUi=conditionsContainer.find('.popupUi').clone(!0,!0).removeClass('popupUi').addClass('clonedPopupUi'),value='';if(clonedPopupUi.find('select').addClass('select2'),clonedPopupUi.find('.fieldValue').val(fieldValue),''===valueType&&(valueType='rawtext'),fieldValueElement.hasClass('date')){clonedPopupUi.find('.textType').find('option[value="rawtext"]').attr('data-ui','input');var dataFormat=fieldValueElement.data('date-format');'rawtext'===valueType&&(value=fieldValueElement.val()),clonedPopupUi.find('.fieldValueContainer').prepend('<input type="text" class="dateField fieldValue col-md-4" value="'+value+'" data-date-format="'+dataFormat+'" data-input="true" >');}else fieldValueElement.hasClass('time')?(clonedPopupUi.find('.textType').find('option[value="rawtext"]').attr('data-ui','input'),'rawtext'===valueType&&(value=fieldValueElement.val()),clonedPopupUi.find('.fieldValueContainer').prepend('<input type="text" class="clockPicker fieldValue col-md-4 form-control" value="'+value+'" data-input="true" >')):fieldValueElement.hasClass('boolean')&&(clonedPopupUi.find('.textType').find('option[value="rawtext"]').attr('data-ui','input'),'rawtext'===valueType&&(value=fieldValueElement.val()),clonedPopupUi.find('.fieldValueContainer').prepend('<input type="checkbox" class="fieldValue col-md-4" value="'+value+'" data-input="true" >'),'true:boolean'==value||''===value?clonedPopupUi.find('.fieldValueContainer input').attr('checked','checked'):clonedPopupUi.find('.fieldValueContainer input').removeAttr('checked'));var callBackFunction=function(data){data.find('.clonedPopupUi').removeClass('d-none');var moduleNameElement=fieldValueElement.closest('.js-conditions-row').find('[name="modulename"]');if(0<moduleNameElement.length){var moduleName=moduleNameElement.val();data.find('.useFieldElement').addClass('d-none'),data.find('[name="'+moduleName+'"]').removeClass('d-none');}App.Fields.Picklist.changeSelectElementView(data),App.Fields.Date.register(data),app.registerEventForClockPicker(data),thisInstance.postShowModalAction(data,valueType),thisInstance.registerChangeFieldEvent(data),thisInstance.registerSelectOptionEvent(data),thisInstance.registerPopUpSaveEvent(data,fieldUiHolder),thisInstance.registerRemoveModalEvent(data),data.find('.fieldValue').filter(':visible').trigger('focus'),data.find('[data-close-modal="modal"]').off('click').on('click',function(){$(this).closest('.modal').removeClass('in').css('display','none');});};conditionsContainer.find('.clonedPopUp').html(clonedPopupUi),$('.clonedPopupUi').on('shown.bs.modal',function(){'function'==typeof callBackFunction&&callBackFunction($('.clonedPopupUi',conditionsContainer));}),$('.clonedPopUp',conditionsContainer).find('.clonedPopupUi').modal();});},postShowModalAction:function postShowModalAction(data,valueType){'fieldname'==valueType?(jQuery('.useFieldContainer',data).removeClass('d-none'),jQuery('.textType',data).val(valueType).trigger('change')):'expression'==valueType&&(jQuery('.useFieldContainer',data).removeClass('d-none'),jQuery('.useFunctionContainer',data).removeClass('d-none'),jQuery('.textType',data).val(valueType).trigger('change')),jQuery('#'+valueType+'_help',data).removeClass('d-none');var uiType=jQuery('.textType',data).find('option:selected').data('ui');jQuery('.fieldValue',data).hide(),jQuery('[data-'+uiType+']',data).show();},registerChangeFieldEvent:function registerChangeFieldEvent(data){jQuery('.textType',data).on('change',function(e){var valueType=jQuery(e.currentTarget).val(),useFieldContainer=jQuery('.useFieldContainer',data),useFunctionContainer=jQuery('.useFunctionContainer',data),uiType=jQuery(e.currentTarget).find('option:selected').data('ui');jQuery('.fieldValue',data).hide(),jQuery('[data-'+uiType+']',data).show(),'fieldname'==valueType?(useFieldContainer.removeClass('d-none'),useFunctionContainer.addClass('d-none')):'expression'==valueType?(useFieldContainer.removeClass('d-none'),useFunctionContainer.removeClass('d-none')):(useFieldContainer.addClass('d-none'),useFunctionContainer.addClass('d-none')),jQuery('.helpmessagebox',data).addClass('d-none'),jQuery('#'+valueType+'_help',data).removeClass('d-none'),data.find('.fieldValue').val('');});},registerSelectOptionEvent:function registerSelectOptionEvent(data){$('.useField,.useFunction',data).on('change',function(e){var currentElement=jQuery(e.currentTarget),newValue=currentElement.val(),oldValue=data.find('.fieldValue').filter(':visible').val();if(!currentElement.hasClass('useField'))concatenatedValue=oldValue+newValue;else if(''!=oldValue)var concatenatedValue=oldValue+' '+newValue;else concatenatedValue=newValue;data.find('.fieldValue').val(concatenatedValue),currentElement.val('').trigger('change.select2');});},registerPopUpSaveEvent:function registerPopUpSaveEvent(data,fieldUiHolder){jQuery('[name="saveButton"]',data).on('click',function(){var valueType=jQuery('.textType',data).val();fieldUiHolder.find('[name="valuetype"]').val(valueType);var fieldValueElement=fieldUiHolder.find('.getPopupUi');'rawtext'==valueType?(fieldValueElement.addClass('validate[funcCall[Vtiger_Base_Validator_Js.invokeValidation]]'),fieldValueElement.attr('data-validation-engine','validate[funcCall[Vtiger_Base_Validator_Js.invokeValidation]]')):(fieldValueElement.removeAttr('data-validation-engine'),fieldValueElement.removeClass('validate[funcCall[Vtiger_Base_Validator_Js.invokeValidation]]'));var fieldType=data.find('.fieldValue').filter(':visible').attr('type'),fieldValue=data.find('.fieldValue').filter(':visible').val();//For checkbox field type, handling fieldValue
'checkbox'==fieldType&&(data.find('.fieldValue').filter(':visible').is(':checked')?fieldValue='true:boolean':fieldValue='false:boolean'),fieldValueElement.val(fieldValue),data.modal('hide'),fieldValueElement.validationEngine('hide');});},registerRemoveModalEvent:function registerRemoveModalEvent(data){data.on('click','.closeModal',function(){data.modal('hide');});},/**
		 * Function which will regiter all events for this page
		 */registerEvents:function registerEvents(){this._super(),this.getPopUp();}}),Vtiger_Field_Js('AdvanceFilterEx_Field_Js',{},{getUiTypeSpecificHtml:function getUiTypeSpecificHtml(){var uiTypeModel=this.getUiTypeModel();return uiTypeModel.getUi()},getModuleName:function getModuleName(){var currentModule=app.getModuleName();return currentModule},/**
		 * Funtion to get the ui for the field  - generally this will be extend by the child classes to
		 * give ui type specific ui
		 * return <String or Jquery> it can return either plain html or jquery object
		 */getUi:function getUi(){var html='<input type="text" class="getPopupUi form-control" name="'+this.getName()+'"  /><input type="hidden" name="valuetype" value="'+this.get('workflow_valuetype')+'" />';return html=jQuery(html),html.filter('.getPopupUi').val(app.htmlDecode(this.getValue())),this.addValidationToElement(html)}}),Vtiger_Date_Field_Js('AdvanceFilterEx_Date_Field_Js',{},{/**
		 * Function to get the user date format
		 */getDateFormat:function getDateFormat(){return this.get('date-format')},/**
		 * Function to get the ui
		 * @return - input text field
		 */getUi:function getUi(){var html,element,comparatorSelectedOptionVal=this.get('comparatorElementVal'),dateSpecificConditions=this.get('dateSpecificConditions');if(0<comparatorSelectedOptionVal.length){if('between'===comparatorSelectedOptionVal||'custom'===comparatorSelectedOptionVal)return html='<div class="date"><input class="dateRangeField form-control" data-calendar-type="range" name="'+this.getName()+'" data-date-format="'+this.getDateFormat()+'" type="text" ReadOnly="true" value="'+this.getValue()+'"></div>',element=$(html),this.addValidationToElement(element);if(this._specialDateComparator(comparatorSelectedOptionVal))return html='<input name="'+this.getName()+'" type="text" value="'+this.getValue()+'" data-validation-engine="validate[funcCall[Vtiger_Base_Validator_Js.invokeValidation]]" data-validator="[{"name":"PositiveNumber"}]"><input type="hidden" name="valuetype" value="'+this.get('workflow_valuetype')+'" />',jQuery(html);if(comparatorSelectedOptionVal in dateSpecificConditions){var startValue=dateSpecificConditions[comparatorSelectedOptionVal].startdate,endValue=dateSpecificConditions[comparatorSelectedOptionVal].enddate;return html='<input name="'+this.getName()+'"  type="text" ReadOnly="true" value="'+startValue+','+endValue+'">',$(html)}if('is today'===comparatorSelectedOptionVal);else return this._super()}else return html='<input type="text" class="getPopupUi date form-control" name="'+this.getName()+'"  data-date-format="'+this.getDateFormat()+'"  value="'+this.getValue()+'" /><input type="hidden" name="valuetype" value="'+this.get('workflow_valuetype')+'" />',element=$(html),this.addValidationToElement(element)},_specialDateComparator:function _specialDateComparator(comp){var index,specialComparators=['less than days ago','more than days ago','in less than','in more than','days ago','days later'];for(index in specialComparators)if(comp==specialComparators[index])return !0;return !1}}),Vtiger_Date_Field_Js('AdvanceFilterEx_Datetime_Field_Js',{},{/**
		 * Function to get the user date format
		 */getDateFormat:function getDateFormat(){return this.get('date-format')},/**
		 * Function to get the ui
		 * @return - input text field
		 */getUi:function getUi(){var html,element,comparatorSelectedOptionVal=this.get('comparatorElementVal');return this._specialDateTimeComparator(comparatorSelectedOptionVal)?(html='<input name="'+this.getName()+'" type="text" value="'+this.getValue()+'" data-validator="[{name:PositiveNumber}]"><input type="hidden" name="valuetype" value="'+this.get('workflow_valuetype')+'" />',element=jQuery(html)):(html='<input type="text" class="getPopupUi date form-control" name="'+this.getName()+'"  data-date-format="'+this.getDateFormat()+'"  value="'+this.getValue()+'" /><input type="hidden" name="valuetype" value="'+this.get('workflow_valuetype')+'" />',element=jQuery(html)),element},_specialDateTimeComparator:function _specialDateTimeComparator(comp){var index,specialComparators=['less than hours before','less than hours later','more than hours later','more than hours before'];for(index in specialComparators)if(comp==specialComparators[index])return !0;return !1}}),Vtiger_Currency_Field_Js('AdvanceFilterEx_Currency_Field_Js',{},{getUi:function getUi(){var html='<input type="text" class="getPopupUi marginLeftZero form-control" name="'+this.getName()+'" value="'+this.getValue()+'"  /><input type="hidden" name="valuetype" value="'+this.get('workflow_valuetype')+'" />',element=jQuery(html);return this.addValidationToElement(element)}}),Vtiger_Time_Field_Js('AdvanceFilterEx_Time_Field_Js',{},{/**
		 * Function to get the ui
		 * @return - input text field
		 */getUi:function getUi(){var html='<input type="text" class="getPopupUi time form-control" name="'+this.getName()+'"  value="'+this.getValue()+'" /><input type="hidden" name="valuetype" value="'+this.get('workflow_valuetype')+'" />',element=jQuery(html);return this.addValidationToElement(element)}}),Vtiger_Field_Js('Vtiger_Percentage_Field_Js',{},{/**
		 * Function to get the ui
		 * @return - input percentage field
		 */getUi:function getUi(){var html='<input type="text" class="getPopupUi form-control" name="'+this.getName()+'" value="'+this.getValue()+'" /><input type="hidden" name="valuetype" value="'+this.get('workflow_valuetype')+'" />',element=jQuery(html);return this.addValidationToElement(element)}}),Vtiger_Field_Js('Vtiger_Text_Field_Js',{},{/**
		 * Function to get the ui
		 * @return - input text field
		 */getUi:function getUi(){var html='<input type="text" class="getPopupUi form-control" name="'+this.getName()+'" value="'+this.getValue()+'" /><input type="hidden" name="valuetype" value="'+this.get('workflow_valuetype')+'" />',element=jQuery(html);return this.addValidationToElement(element)}}),Vtiger_Field_Js('Vtiger_Boolean_Field_Js',{},{/**
		 * Function to get the ui
		 * @return - input text field
		 */getUi:function getUi(){var html='<input type="text" class="getPopupUi form-control boolean" name="'+this.getName()+'" value="'+this.getValue()+'" /><input type="hidden" name="valuetype" value="'+this.get('workflow_valuetype')+'" />',element=jQuery(html);return this.addValidationToElement(element)}}),Vtiger_Owner_Field_Js('AdvanceFilterEx_Owner_Field_Js',{},{getUi:function getUi(){var html='<select class="select2" name="'+this.getName()+'">',pickListValues=this.getPickListValues(),selectedOption=this.getValue();for(var optGroup in pickListValues){html+='<optgroup label="'+optGroup+'">';var optionGroupValues=pickListValues[optGroup];for(var option in optionGroupValues)html+='<option value="'+option+'" ',option==selectedOption&&(html+=' selected '),html+='>'+optionGroupValues[option]+'</option>';html+='</optgroup>';}html+='</select>';var selectContainer=jQuery(html);return this.addValidationToElement(selectContainer),selectContainer}}),Vtiger_Picklist_Field_Js('AdvanceFilterEx_Picklist_Field_Js',{},{});
//# sourceMappingURL=AdvanceFilterEx.min.js.map
